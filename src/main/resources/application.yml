server:
  port: 0 #port를 0으로 ???? ?? ?? ??? ?????? ?? => ?? ??? ???? ??? ?

spring:
  application:
    name: user-service
  zipkin:
    base-url: http://127.0.0.1:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.8
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb


eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true #eureka 서버에 해당 micro service를 등록할 것인지 선택
    service-url: #eureka client의 정보가 저장될 서버의 주소
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: Welcome to the Simple E-commerce!

logging:
  level:
    com.example.userservice.client: DEBUG # userservice의 로그 레벨을 debug로 설정


# 토큰정보
#token:
#  expiration_time: 86400000 # 60s * 60m * 24H * 1000
#  secret: user_token # 이 정보가 만들고자 하는 플랜텍스트의 조합이 되어서 특수한 토큰이 만들어질때 사용됨

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus
